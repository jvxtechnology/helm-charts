affinity: {}
deploymentAnnotations: {}
externalDatabase:
  database: leantime
  enabled: false
  host: ''
  password: ''
  port: 3306
  user: ''
fullnameOverride: ''
image:
  pullPolicy: IfNotPresent
  repository: leantime/leantime
  tag: 3.0.5
imagePullSecrets: []
ingress:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  enabled: true
  host: host.example.com
  className: nginx
  labels: {}
  tls:
    - hosts:
        - host.example.com
      secretName: leantime-tls
ingressRoute:
  enabled: false
  entrypoints:
    - websecure
  host: ''
  tls: []
internalDatabase:
  enabled: true
  image:
    pullPolicy: IfNotPresent
    repository: mariadb
    tag: '10.10'
  password: ''
  persistence:
    accessMode: ReadWriteOnce
    enabled: true
    size: 8Gi
  port: 3306
  resources: {}
  rootPassword: ''
  securityContext: {}
  user: leantime
leantime:
  defaultTheme: ''
  defaultTimezone: America/Chicago
  language: ''
  ldap:
    enabled: false
    host: ''
    userDN: ''
  logo: ''
  name: 'Leantime'
  primaryColor: null
  printLogo: ''
  s3:
    bucket: ''
    enabled: false
    endpoint: ''
    key: ''
    region: ''
    secret: ''
    usePathStyleEndpoint: false
  secondaryColor: null
  sessionSalt: ''
  smtp:
    enabled: false
    from: ''
    host: ''
    password: ''
    user: ''
  url: ''
nameOverride: ''
nodeSelector: {}
persistence:
  accessMode: ReadWriteOnce
  enabled: true
  size: 8Gi
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  externalTrafficPolicy: Cluster
  nodePorts:
    http: ''
  port: 80
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: false
  name: ''
sessionstorage:
  accessMode: ReadWriteOnce
  enabled: true
  size: 2Gi
sidecars: []
strategy: {}
tolerations: []
